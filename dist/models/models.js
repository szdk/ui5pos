sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/Device","ui5pos/szdk/localService/MockServer","sap/ui/model/odata/v2/ODataModel"],function(e,t,o,s){"use strict";return{createDeviceModel:function(){var o=new e(t);t.resize.attachHandler(e=>o.refresh());o.setDefaultBindingMode("OneWay");return o},createSettingsModel:function(){let t={odata:{serviceUrl:"",useMock:true,delay:100,generateID:false,updateQuantity:false,updateMethod:"MERGE"},theme:"auto",lang:"auto",density:"cozy"};let o=new e(t);o.setDefaultBindingMode("OneWay");return o},createNavModel:function(){return new e({sideNav:{visible:true,selectedKey:"home",expanded:!t.system.phone,expandableMin:1e3}})},createService:function(e){let t=new Promise((t,i)=>{if(e.odata.useMock){if(!this._mock)this._mock={};if(!this._mock[e.odata.serviceUrl]){this._mock[e.odata.serviceUrl]=o.init(e);console.log(`Created new Mock Server for "${e.odata.serviceUrl}" with settings:`);console.log(e)}else{console.log(`Mock Server already exists for "${e.odata.serviceUrl}"`)}}if(!this._services)this._services={};if(!this._services[e.odata.serviceUrl]){let t={};if(!e.odata.useMock)t.defaultUpdateMethod=e.odata.updateMethod=="MERGE"?sap.ui.model.odata.UpdateMethod.Merge:sap.ui.model.odata.UpdateMethod.Put;this._services[e.odata.serviceUrl]=new s(e.odata.serviceUrl,t);this._services[e.odata.serviceUrl].setDeferredGroups(["co_del_itm","co_updt_itm","co_crt_itm","co_updt_prod"]);console.log(`Created new Service "${e.odata.serviceUrl}"`)}else{console.log(`Service "${e.odata.serviceUrl}" alread exists`)}t(this._services[e.odata.serviceUrl])});return t},deleteService:function(e){if(this._mock&&this._mock[e]){this._mock[e].destroy();delete this._mock[e];console.log(`Destroyed Mock Server "${e}"`)}else{console.log(`Mock server does not exist for service "${e}"`)}if(this._services&&this._services[e]){this._services[e].destroy();delete this._services[e];console.log(`Destroyed Service "${e}"`)}else{console.log(`Service "${e}" does not exist`)}}}});
//# sourceMappingURL=models.js.map